name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "**" ]
  workflow_call:

jobs:
  build-dev-conan-2:
    name: Build developer packages with Conan 2
    runs-on: ubuntu-latest

    steps:
      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Create default Conan profile
        run: conan profile detect

      - name: Fetch conan recipes
        uses: actions/checkout@v4

      - name: Build up-core-api conan package
        shell: bash
        run: |
          conan create --version 1.5.8 up-core-api/developer

      - name: Build up-cpp conan package
        shell: bash
        run: |
          conan create --version 0.2.0 --build=missing up-cpp/developer

      - name: Build zenohc conan package
        shell: bash
        run: |
          conan create --version 0.11.0.3 zenohc-tmp/prebuilt
          conan create --version 0.11.0 zenohc-tmp/prebuilt

      - name: Build zenohcpp conan package
        shell: bash
        run: |
          conan create --version 0.11.0.3 zenohcpp-tmp/from-source
          conan create --version 0.11.0 zenohcpp-tmp/from-source

      - name: Build up-transport-zenoh-cpp conan package
        shell: bash
        run: |
          conan create --version 0.2.0 --build=missing up-transport-zenoh-cpp/developer

  # NOTE: In GitHub repository settings, the "Require status checks to pass
  # before merging" branch protection rule ensures that commits are only merged
  # from branches where specific status checks have passed. These checks are
  # specified manually as a list of workflow job names. Thus we use this extra
  # job to signal whether all CI checks have passed.
  ci:
    name: CI status checks
    runs-on: ubuntu-latest
    needs: [build-dev-conan-2]
    if: always()
    steps:
      - name: Check whether all jobs pass
        run: echo '${{ toJson(needs) }}' | jq -e 'all(.result == "success")'
